// Shape.java - Interface for common shape methods
public interface Shape {
    double getArea();
}

// Rectangle.java - Rectangle class implementing the Shape interface
public class Rectangle implements Shape {
    private double length;
    private double width;
    
    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }
    
    @Override
    public double getArea() {
        return length * width;
    }
}

// Triangle.java - Triangle class implementing the Shape interface
public class Triangle implements Shape {
    private double base;
    private double height;
    
    public Triangle(double base, double height) {
        this.base = base;
        this.height = height;
    }
    
    @Override
    public double getArea() {
        return 0.5 * base * height;
    }
}

// Square.java - Square class implementing the Shape interface
public class Square implements Shape {
    private double side;
    
    public Square(double side) {
        this.side = side;
    }
    
    @Override
    public double getArea() {
        return side * side;
    }
}

// Circle.java - Circle class implementing the Shape interface
public class Circle implements Shape {
    private double radius;
    
    public Circle(double radius) {
        this.radius = radius;
    }
    
    @Override
    public double getArea() {
        return Math.PI * radius * radius;
    }
}

// TestGraphicsPackage.java - Testing the graphics package
public class TestGraphicsPackage {
    public static void main(String[] args) {
        Rectangle rectangle = new Rectangle(5, 10);
        Triangle triangle = new Triangle(6, 8);
        Square square = new Square(4);
        Circle circle = new Circle(3);
        
        System.out.println("Rectangle area: " + rectangle.getArea());
        System.out.println("Triangle area: " + triangle.getArea());
        System.out.println("Square area: " + square.getArea());
        System.out.println("Circle area: " + circle.getArea());
    }
}
